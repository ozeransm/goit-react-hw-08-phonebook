{"version":3,"file":"static/js/373.88d1980c.chunk.js","mappings":"0RAoDA,UA9CsB,WAChB,OAAwBA,EAAAA,EAAAA,UAAS,IAAjC,eAAOC,EAAP,KAAaC,EAAb,KACA,GAA2BF,EAAAA,EAAAA,UAAS,IAApC,eAAOG,EAAP,KAAeC,EAAf,KACMC,GAAWC,EAAAA,EAAAA,MAEXC,GAAWC,EAAAA,EAAAA,IAAYC,EAAAA,IAY7B,SAASC,EAAT,GAA+C,IAAD,IAAtBC,OAAQC,EAAc,EAAdA,MAC9B,OAD4C,EAAPX,MAEnC,IAAK,OAAQC,EAAQU,GAAO,MAC5B,IAAK,QAASR,EAASQ,GAI1B,CAEH,OACI,UAAC,KAAD,CAAKC,EAAE,MAAMC,GAAG,OAAOC,GAAG,OAAOC,GAAG,OAAOC,QAAQ,OAAOC,WAAW,SAASC,eAAe,SAASC,GAAG,YAAYC,aAAa,KAAKC,EAAG,EAAGC,MAAM,QAAnJ,WAEA,SAAC,IAAD,CAAMC,SAAS,OAAOC,WAAW,MAAjC,8BACA,SAAC,IAAD,WACA,iBAAMC,SAzBR,SAA2BC,GACzBA,EAAEC,iBACE3B,EAAK4B,QAAQ1B,EAAO0B,OACjBtB,EAASuB,MAAK,SAAAC,GAAE,OAAEA,EAAG9B,OAAO+B,OAAO/B,EAAnB,IAEhBgC,IAAAA,OAAAA,QAAwB,oBAD3B5B,GAAS6B,EAAAA,EAAAA,IAAa,CAACjC,KAAAA,EAAME,OAAAA,KAG3B8B,IAAAA,OAAAA,QAAwB,eAC9B/B,EAAQ,IACRE,EAAS,GACV,EAeC,UACA,UAAC,KAAD,CAAaa,QAAQ,OAArB,WAEI,SAAC,EAAAkB,EAAD,CAAOlC,KAAK,OAAOmC,GAAG,OAAOC,SAAU3B,EAAeE,MAAOX,EAAMqC,KAAK,OAAOf,MAAM,OAAOgB,YAAY,OAAO1B,EAAE,MAAMC,GAAG,IAAIC,GAAG,OAEjI,SAAC,EAAAoB,EAAD,CAAOlC,KAAK,QAAQmC,GAAG,QAAQC,SAAU3B,EAAeE,MAAOT,EAAQmC,KAAK,OAAOf,MAAM,OAAOgB,YAAY,eAAe1B,EAAE,SAC7H,SAAC,IAAD,CAAQC,GAAG,IAAIC,GAAG,IAAIyB,YAAY,OAAOF,KAAK,SAA9C,kCAQX,C","sources":["components/AddNewContact.jsx"],"sourcesContent":["import { Box, FormControl, Input, Button, Text, Flex } from '@chakra-ui/react';\nimport Notiflix from 'notiflix';\nimport { useState } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { addPhoneBook } from 'redux/contacts/contacts';\nimport { contacts as contactPhone } from \"redux/selector\";\nconst AddNewContact = ()=>{\n      const [name, setName] = useState('');\n      const [number, setPhone] = useState('');\n      const dispatch = useDispatch();\n      \n      const contacts = useSelector(contactPhone); \n      function handlerAddContact(e){\n        e.preventDefault();\n        if (name.trim()&&number.trim()){\n          if (!contacts.find(el=>el.name===String(name)))\n            dispatch(addPhoneBook({name, number}));\n          else Notiflix.Notify.failure('Dublicate record');\n                   \n        }else Notiflix.Notify.failure('Empty field');\n        setName('');\n        setPhone('');\n      }\n      function handlerChange({target:{value, name}}){\n        switch(name){\n          case 'name': setName(value);break;\n          case 'phone': setPhone(value);break;\n          default: break;\n        }\n        \n      }\n      \n    return(\n        <Box w='90%' ml='auto' mr='auto' mb='10px' display='flex' alignItems=\"center\" justifyContent=\"center\" bg='lightBlue' borderRadius='md' p={4} color='white'>\n        \n        <Text fontSize='20px' fontWeight='500'>Add new contact</Text>\n        <Flex>\n        <form onSubmit={handlerAddContact}>\n        <FormControl display='flex' >\n          \n            <Input name=\"name\" id=\"name\" onChange={handlerChange} value={name} type='text' color='grey' placeholder='Name' w='100' ml='3' mr='3'/>\n            \n            <Input name=\"phone\" id=\"phone\" onChange={handlerChange} value={number} type='text' color='grey' placeholder='Phone Number' w='100'/>\n            <Button ml='3' mr='3' colorScheme='teal' type=\"submit\">Add Contact</Button>\n            \n        </FormControl>\n        </form>\n        \n        </Flex>\n      </Box>\n    )\n}\nexport default AddNewContact;"],"names":["useState","name","setName","number","setPhone","dispatch","useDispatch","contacts","useSelector","contactPhone","handlerChange","target","value","w","ml","mr","mb","display","alignItems","justifyContent","bg","borderRadius","p","color","fontSize","fontWeight","onSubmit","e","preventDefault","trim","find","el","String","Notiflix","addPhoneBook","I","id","onChange","type","placeholder","colorScheme"],"sourceRoot":""}